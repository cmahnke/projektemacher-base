{{- $pages := .Site.RegularPages -}}
  {{- range .Site.Home.Translations -}}
  {{- $pages = $pages | lang.Merge .Site.RegularPages -}}
{{- end -}}

{{- $iiif := where $pages "Params.iiifContext" "!=" nil -}}
{{- $iiif = where $iiif "Params.displayinlist" "!=" false -}}

{{- $items := slice -}}
{{/* TODO: Remove this
* Check if page is section child and parent also has iiif Context
* Check also for .Params.output
*/}}
{{- range $iiif -}}
  {{- if hasPrefix .Params.iiifContext "http://iiif.io/api/presentation/" -}}
    {{ $items = $items | append . }}
  {{- else if hasPrefix .Params.iiifContext "http://iiif.io/api/image/" -}}
    {{- warnf "[home.iiif-collection.json]- Ignorig %s" .Path -}}
  {{- end -}}
{{- end -}}
{
  "@context": "http://iiif.io/api/presentation/3/context.json",
  "id": "{{ $.Site.BaseURL }}collection.json",
  "type": "Collection",
  "label": {
      "{{ $.Site.Language.Lang }}": [
        "{{ $.Site.Title }}"
      ]
    {{- if hugo.IsMultilingual -}}
      {{- $translations := where $.Site.Home.AllTranslations ".Lang" "!=" $.Site.Language.Lang -}}
      {{- range $translations -}}
      ,
        "{{ .Lang }}": [
          "{{ .Name }}"
        ]
      {{ end }}
    {{- end -}}
  },
  "items": [
    {{- range $i, $item := $items -}}
      {{- with $item.Params.outputs -}}
        {{/* This is usually used if a output format definition isn't in config.toml - we could also fail here */}}
        {{- if reflect.IsSlice . -}}
          {{- if and (not (in . "iiif")) (not (in . "iiif-manifest")) -}}
            {{- continue -}}
          {{- end -}}
        {{- else -}}
          {{- $skip := true -}}
          {{- range . -}}
            {{- if eq .Name "iiif" -}}
              {{- $skip = false -}}
            {{- end -}}
            {{- if eq .Name "iiif-manifest" -}}
              {{- $skip = false -}}
            {{- end -}}
          {{- end -}}
          {{- if $skip -}}
            {{- continue -}}
          {{- end -}}
        {{- end -}}
      {{- else -}}
        {{- continue -}}
      {{- end -}}
      {{- $manifest := "manifest.json" -}}
      {{- with $item.Params.iiifManifest -}}
        {{- $manifest = path.Base . -}}
      {{- end -}}
      {
        "id": "{{ printf "%s%s/%s" $.Site.BaseURL (substr $item.Path 1) $manifest }}",
        "type": "Manifest",

        {{ partial "iiif/3/thumbnail.json" . }}

        "label": {
          "{{ $.Site.Language.Lang }}": [
            "{{ $item.Title }}"
          ]
          {{- if hugo.IsMultilingual -}}
            {{- if .IsTranslated -}}
              {{- range .Translations -}}
                ,
                "{{ .Lang }}": [
                  "{{ .Title }}"
                ]
              {{- end -}}
            {{- end -}}
          {{- end -}}
        }
      }
      {{- if ne $i (sub (len $items) 1) -}}
       ,
      {{- end -}}
    {{- end -}}
  ]
}
