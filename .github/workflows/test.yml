name: Lint and check

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  contents: write

env:
  HUGO_VERSION: 0.138.0

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          check-latest: true
          node-version-file: '.nvmrc'

      - name: Configure npm
        run: npm config set legacy-peer-deps true

      - name: Install required dependencies
        run: |
          ./scripts/github/setup-dependencies.sh

# Needed to check if the JXL Python plugin builds
      - name: Install JXL dependencies
        run: |
          ./scripts/github/jxl-0.11.0.sh

# Needed to check if the JXL Python plugin builds
      - name: Install required Python dependencies
        run: |
          ./scripts/github/python-dependencies.sh

      - name: Install Node dependencies
        run: |
          #npm install --ignore-scripts
          yarn install --ignore-scripts

      - name: Run linters
        run: |
          yarn run lint
          yarn run eslint scripts/
          #npx stylelint -c .stylelintrc.json 'assets/scss/*'
          #npx eslint assets/js
          #npx eslint scripts

  test_install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: '.nvmrc'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

#      - name: Set up Docker
#        uses: docker/setup-buildx-action@v2

      - name: Install required dependencies
        run: |
          ./scripts/github/setup-dependencies.sh
          ./scripts/github/jxl-0.10.3.sh
          ./scripts/github/setup-xslt.sh
          ./scripts/github/setup-inkscape.sh
          ./scripts/github/setup-media.sh
          ./scripts/github/python-dependencies.sh
          ./scripts/github/docker-images.sh
          ./scripts/github/setup-yarn.sh

  test_install_scss:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)

      - name: Install Dart SASS
        run: |
          ./scripts/github/dart-sass.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: '.nvmrc'

      - name: Install Yarn and Node modules
        run: |
          ./scripts/github/setup-yarn.sh
          yarn install --ignore-scripts

      - name: Run Dart SASS
        run: |
          sass -I assets/scss/ -I node_modules/ol assets/scss/lint_dummy.scss

  test_fonts:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)

#      - neme: Pull Docker images
#        run: |
#          ./scripts/github/docker-images.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: '.nvmrc'

      - name: Install fonts
        run: |
          ./scripts/fonts.sh

      - name: Install system fonts
        run: |
          ./scripts/github/setup-system-fonts.sh

  lint_fonts:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: '.nvmrc'

      - name: Install fonts
        run: |
          ./scripts/fonts.sh

      - name: Lint fonts
        run: |
          cd fonts
          npm --no-audit install
          cd ..
          ln -s fonts/node_modules ./node_modules
          yarn run stylelint --config .stylelintrc-postbuild.yaml 'assets/css/fonts/*'

  test_inkscape_install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
      - name: Install required dependencies
        run: |
          ./scripts/github/setup-dependencies.sh
      - name: Install Inkscape and it's dependencies
        run: |
          ./scripts/github/setup-inkscape.sh

  test_xslt_install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
      - name: Install required dependencies
        run: |
          ./scripts/github/setup-dependencies.sh
      - name: Install Saxon and it's dependencies
        run: |
          ./scripts/github/setup-xslt.sh
      - name: List Saxon directory
        run: |
          ls -al /opt/saxon

  test_PyHugolib_install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'scripts/PyHugo/go/go.mod'
      - name: Install required dependencies
        run: |
          ./scripts/github/python-dependencies.sh
      - name: "Build PyHugolib"
        run: |
          ./scripts/github/pyhugolib.sh

  test_pnpm:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Install with pnpm
        run: |
          pnpm install --ignore-scripts
          ls node_modules


  test_hugo_versions:
    runs-on: ubuntu-22.04
    continue-on-error: ${{ matrix.can-fail }}
    strategy:
      fail-fast: false
      matrix:
        version: ['0.128.2', '0.129.0', '0.132.2', '0.133.0', '0.135.0', '0.136.5', '0.137.1', 'latest']
        can-fail: [false]
        include:
          - version: 0.128.2
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: 0.129.0
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: 0.132.2
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: 0.133.0
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: 0.135.0
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: 0.136.5
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: 0.137.1
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'
          - version: latest
            args: '--printI18nWarnings --printUnusedTemplates --logLevel=debug'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          check-latest: true
          node-version-file: '.nvmrc'

      - name: Install required dependencies
        run: |
          ./scripts/setup.sh

      - name: Install Dart SASS
        run: |
          ./scripts/github/dart-sass.sh

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3.0.0
        with:
          hugo-version: ${{ matrix.version }}
          extended: true

      - name: Merge lang files
        if: ${{ matrix.args }}
        run: |
          ./scripts/init/i18n.sh i18n

      - name: Build Hugo site
        if: ${{ ! matrix.args }}
        working-directory: exampleSite
        run: hugo --themesDir ../..

      - name: Build Hugo site (with arguments)
        if: ${{ matrix.args }}
        working-directory: exampleSite
        run: |
          hugo --themesDir ../.. ${{ matrix.args }}
