import * as fs from 'node:fs';
import * as path from 'node:path';
import { fileURLToPath } from 'node:url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Config
const FLAGS_DIR = path.join(__dirname, 'node_modules', 'flag-icons', 'flags', '4x3');
const OUTPUT_FILE = path.join(__dirname, 'scss', 'flags.scss');
const VARIABLE_PREFIX = '$flag-';

function encodeSvgForDataUri(svgContent) {
    let optimized = svgContent.
      //replace(//g, '').
      replace(/>\s+</g, '><').
      replace(/\s{2,}/g, ' ').
      trim();


    optimized = optimized.
      replace(/"/g, '\'').
      replace(/%/g, '%25').
      replace(/#/g, '%23').
      replace(/{/g, '%7B').
      replace(/}/g, '%7D').
      replace(/</g, '%3C').
      replace(/>/g, '%3E').
      replace(/\s/g, '%20');

    return `url("data:image/svg+xml;charset=utf-8,${optimized}")`;
}

function main() {
    console.log(`Starting flag icon conversion (using ESM)...`);
    console.log(`Source directory: ${FLAGS_DIR}`);

    // Create the output directory if it doesn't exist
    const outputDir = path.dirname(OUTPUT_FILE);
    if (!fs.existsSync(outputDir)) {
        fs.mkdirSync(outputDir, { recursive: true });
    }

    let scssContent = `/**
 * This file is AUTOGENERATED by 'generate-flag-vars.js'.
 * Do not edit manually.
 * SCSS variables for flag-icons as Data URIs.
 */

`;
    let fileCount = 0;

    try {
        const svgFiles = fs.readdirSync(FLAGS_DIR).filter(file => file.endsWith('.svg'));

        for (const file of svgFiles) {
            const countryCode = path.basename(file, '.svg');
            const fullPath = path.join(FLAGS_DIR, file);

            const svgContent = fs.readFileSync(fullPath, 'utf8');

            const dataUri = encodeSvgForDataUri(svgContent);

            // Create SCSS variable
            // !default allows overriding the value later if needed
            scssContent += `${VARIABLE_PREFIX}${countryCode}: ${dataUri} !default;\n`;
            fileCount++;
        }

        fs.writeFileSync(OUTPUT_FILE, scssContent);

        console.log(`\nSuccessfully generated ${fileCount} variables.`);
        console.log(`Output written to: ${OUTPUT_FILE}`);

    } catch (error) {
        console.error('Error generating SCSS variables:', error.message);
        console.error(`Please ensure the 'flag-icons' package is installed via 'npm install flag-icons' and the directory path is correct: ${FLAGS_DIR}`);
    }
}

main();
